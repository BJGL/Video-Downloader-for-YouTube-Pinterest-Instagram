# -*- coding: utf-8 -*-
"""Youtube downloader

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Rpxf4n7y9q__IVQJqAdPTZK73ekIiQCq
"""

!pip install yt-dlp

!pip install instaloader

import os
import subprocess
import yt_dlp
import instaloader

def youtube_downloader(link, output_dir):
    """Download a YouTube video using yt-dlp (silent mode)."""
    try:
        os.makedirs(output_dir, exist_ok=True)
        output_template = os.path.join(output_dir, '%(title)s.%(ext)s')

        subprocess.run(
            ['yt-dlp', '-o', output_template, link],
            check=True,
            stdout=subprocess.DEVNULL
        )
        print('Download successfully')
    except subprocess.CalledProcessError as e:
        print(f'Download failed with return code {e}.')


def pinterest_downloader(link, output_dir):
    """Download a Pinterest video using yt-dlp (silent mode)."""
    os.makedirs(output_dir, exist_ok=True)
    output = os.path.join(output_dir, '%(title)s.%(ext)s')

    ydl_opts = {
        'outtmpl': output,
        'format': 'bestvideo+bestaudio/best',
        'merge_output_format': 'mp4',
        'quiet': True,
        'no_warnings': True
    }

    try:
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            ydl.download([link])
        print('Download successfully')
    except Exception as e:
        print(f'Download failed: {e}')


def instagram_downloader(link, output_dir):
    """Download an Instagram reel using instaloader (silent mode)."""
    os.makedirs(output_dir, exist_ok=True)

    loader = instaloader.Instaloader(
        dirname_pattern=output_dir,
        download_comments=False,
        download_geotags=False,
        download_pictures=False,
        download_video_thumbnails=False,
        save_metadata=False,
        quiet=True
    )

    shortcode = link.split('/')[-2]

    try:
        post = instaloader.Post.from_shortcode(loader.context, shortcode)
        loader.download_post(post, target=output_dir)
        print('Download successfully')
    except Exception as e:
        print(f'Something went wrong: {e}')


def main():
    """Main menu for selecting video source and output folder."""
    output_dir = input(
        "Enter output folder name (default: downloaded_videos): "
    ).strip() or "downloaded_videos"

    while True:
        choice = input(
            "\nChoose an option\n"
            "1: YouTube\n"
            "2: Pinterest\n"
            "3: Instagram\n\n"
            "Choice: "
        ).strip()

        if choice == "1":
            link = input("\nInsert the YouTube video link: ").strip()
            youtube_downloader(link, output_dir)
            break

        elif choice == "2":
            link = input("\nInsert the Pinterest video link: ").strip()
            pinterest_downloader(link, output_dir)
            break

        elif choice == "3":
            link = input("\nInsert the Instagram reel link: ").strip()
            instagram_downloader(link, output_dir)
            break

        else:
            print("Invalid option. Please try again.\n")

main()